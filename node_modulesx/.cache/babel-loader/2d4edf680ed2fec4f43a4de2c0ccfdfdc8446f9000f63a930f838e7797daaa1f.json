{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/providers/LoadingWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LoadingContext from '../context/LoadingContext';\nimport Loading from '../components/Loading';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoadingWrapper = ({\n  children\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(isLoading, 'isLoading in loadingwrapper');\n  const enableLoading = useCallback(() => {\n    setIsLoading(true);\n  }, []);\n  const disableLoading = useCallback(() => {\n    setIsLoading(false);\n  }, []);\n  const showLoadingSign = () => {\n    if (isLoading === true) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoadingContext.Provider, {\n      value: {\n        isLoading,\n        setIsLoading,\n        showLoadingSign,\n        disableLoading,\n        enableLoading\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n_s(LoadingWrapper, \"aMKpFnlXRV+gvYJua5FWdzgZJeQ=\");\n_c = LoadingWrapper;\nexport default LoadingWrapper;\nvar _c;\n$RefreshReg$(_c, \"LoadingWrapper\");","map":{"version":3,"names":["React","useState","useEffect","LoadingContext","Loading","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","LoadingWrapper","children","_s","isLoading","setIsLoading","console","log","enableLoading","disableLoading","showLoadingSign","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/providers/LoadingWrapper.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport LoadingContext from '../context/LoadingContext';\nimport Loading from '../components/Loading';\nimport { useCallback } from 'react';\n\nconst LoadingWrapper = ({children}) => {\n    const [isLoading, setIsLoading] = useState(false);\n    console.log(isLoading, 'isLoading in loadingwrapper')\n\n    const enableLoading = useCallback(() =>\n    {\n      setIsLoading(true);\n    },\n    []\n);\n\nconst disableLoading = useCallback(() =>\n     {\n       setIsLoading(false);\n     },\n     []\n);\n\n    const showLoadingSign = () => {\n        if(isLoading === true){\n          return (\n              <Loading />\n          )\n        }\n    }\n\n    return (\n        <>\n         <LoadingContext.Provider value={{isLoading, setIsLoading, showLoadingSign, disableLoading, enableLoading}}>\n            {children}\n         </LoadingContext.Provider>\n        </>\n    )\n}\n\nexport default LoadingWrapper;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,cAAc,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjDc,OAAO,CAACC,GAAG,CAACH,SAAS,EAAE,6BAA6B,CAAC;EAErD,MAAMI,aAAa,GAAGZ,WAAW,CAAC,MAClC;IACES,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EACD,EACJ,CAAC;EAED,MAAMI,cAAc,GAAGb,WAAW,CAAC,MAC9B;IACES,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,EACL,CAAC;EAEG,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAGN,SAAS,KAAK,IAAI,EAAC;MACpB,oBACIN,OAAA,CAACH,OAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAEjB;EACJ,CAAC;EAED,oBACIhB,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACCJ,OAAA,CAACJ,cAAc,CAACqB,QAAQ;MAACC,KAAK,EAAE;QAACZ,SAAS;QAAEC,YAAY;QAAEK,eAAe;QAAED,cAAc;QAAED;MAAa,CAAE;MAAAN,QAAA,EACtGA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC,gBACzB,CAAC;AAEX,CAAC;AAAAX,EAAA,CAjCKF,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}