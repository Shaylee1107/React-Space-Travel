{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/pages/Planets.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SpaceTravelApi from '../services/SpaceTravelApi';\nimport Planet from '../components/ Planet';\nimport DestinationContext from '../context/DestinationContext';\nimport { useContext } from 'react';\nimport LoadingContext from '../context/LoadingContext';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const navigate = useNavigate();\n  const [planets, setPlanets] = useState('');\n  // const {targetPlanet} = useContext(DestinationContext);\n  // const [, updateState] = React.useState();\n  // const forceUpdate = React.useCallback(() => updateState({}), []);\n  const [resetCount, setResetCount] = useState(0);\n  const {\n    toggleLoading,\n    isLoading\n  } = useContext(LoadingContext);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    const loadPlanets = async () => {\n      toggleLoading();\n      const loadingAPI = await SpaceTravelApi.getPlanets();\n      console.log(loadingAPI, 'loadingAPI');\n      setPlanets(loadingAPI.data);\n      setDataLoaded(true);\n    };\n    loadPlanets();\n  }, []);\n  const loadPlanetsFromEffect = () => {\n    if (planets !== '') {\n      return planets.map(p => {\n        return /*#__PURE__*/_jsxDEV(Planet, {\n          id: p.id,\n          pictureUrl: p.pictureUrl,\n          name: p.name,\n          currentPopulation: p.currentPopulation\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, this);\n      });\n    }\n  };\n  useEffect(() => {\n    if (dataLoaded === true) {\n      toggleLoading();\n    }\n  }, [dataLoaded]);\n  const showLoadingSign = () => {\n    console.log(isLoading, 'isLoading');\n    if (isLoading === true) {\n      return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  // useEffect(() => {\n  //   if(targetPlanet !== null){\n  //     forceUpdate();\n  //   }\n  // }, [forceUpdate, targetPlanet])\n\n  const incrementResetCount = () => {\n    setResetCount(count => count + 1);\n  };\n  useEffect(() => {\n    if (resetCount > 0) {\n      const loadPlanets = () => {\n        localStorage.setItem(\"MOCK_DB\", JSON.stringify({\n          planets: [{\n            id: 0,\n            name: \"Mercury\",\n            currentPopulation: 0,\n            pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/8/88/Reprocessed_Mariner_10_image_of_Mercury.jpg\"\n          }, {\n            id: 1,\n            name: \"Venus\",\n            currentPopulation: 0,\n            pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Venus_globe.jpg/800px-Venus_globe.jpg\"\n          }, {\n            id: 2,\n            name: \"Earth\",\n            currentPopulation: 100000,\n            pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/The_Blue_Marble_%28remastered%29.jpg/800px-The_Blue_Marble_%28remastered%29.jpg\"\n          }, {\n            id: 3,\n            name: \"Mars\",\n            currentPopulation: 0,\n            pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/02/OSIRIS_Mars_true_color.jpg/800px-OSIRIS_Mars_true_color.jpg\"\n          }, {\n            id: 4,\n            name: \"Jupiter\",\n            currentPopulation: 0,\n            pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Jupiter%2C_image_taken_by_NASA%27s_Hubble_Space_Telescope%2C_June_2019.png/800px-Jupiter%2C_image_taken_by_NASA%27s_Hubble_Space_Telescope%2C_June_2019.png\"\n          }, {\n            id: 5,\n            name: \"Saturn\",\n            currentPopulation: 0,\n            pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/8423_20181_1saturn2016.jpg/1920px-8423_20181_1saturn2016.jpg\"\n          }, {\n            id: 6,\n            name: \"Uranus\",\n            currentPopulation: 0,\n            pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Uranus_as_seen_by_NASA%27s_Voyager_2_%28remastered%29_-_JPEG_converted.jpg/800px-Uranus_as_seen_by_NASA%27s_Voyager_2_%28remastered%29_-_JPEG_converted.jpg\"\n          }, {\n            id: 7,\n            name: \"Neptune\",\n            currentPopulation: 0,\n            pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/0/06/Neptune.jpg\"\n          }],\n          spacecrafts: [{\n            id: \"prispax\",\n            name: \"Prispax\",\n            capacity: 10000,\n            description: \"Presenting the Astrolux Odyssey: a revolutionary spacecraft merging cutting-edge technology with lavish luxury, designed to usher 10,000 passengers into the solar system's embrace. A marvel of engineering, its sleek exterior is adorned with solar panels, fueling advanced propulsion while minimizing environmental impact.\" + \"Within, the vessel transforms into a haven of opulence. Lavish suites offer cosmic panoramas, celestial artwork bedecks lounges, and sprawling gardens thrive in zero-gravity. Culinary excellence reigns in gourmet restaurants, while immersive theaters and VR chambers offer stellar entertainment.\" + \"Safety remains paramount with cosmic radiation shielding and top-tier medical facilities. The Astrolux Odyssey not only advances space exploration but redefines elegance, uniting humanity's thirst for knowledge with a taste of the sublime.\",\n            pictureUrl: null,\n            currentLocation: 2\n          }]\n        }));\n      };\n      loadPlanets();\n    }\n  }, [resetCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showLoadingSign(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => incrementResetCount(),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 12\n    }, this), loadPlanetsFromEffect()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n_s(Planets, \"w8EzGqJKDBQOdgaxJCpZu8l2ZPs=\", false, function () {\n  return [useNavigate];\n});\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","SpaceTravelApi","Planet","DestinationContext","useContext","LoadingContext","Loading","jsxDEV","_jsxDEV","Planets","_s","navigate","planets","setPlanets","resetCount","setResetCount","toggleLoading","isLoading","dataLoaded","setDataLoaded","loadPlanets","loadingAPI","getPlanets","console","log","data","loadPlanetsFromEffect","map","p","id","pictureUrl","name","currentPopulation","fileName","_jsxFileName","lineNumber","columnNumber","showLoadingSign","incrementResetCount","count","localStorage","setItem","JSON","stringify","spacecrafts","capacity","description","currentLocation","children","onClick","_c","$RefreshReg$"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/pages/Planets.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SpaceTravelApi from '../services/SpaceTravelApi';\nimport Planet from '../components/ Planet';\nimport DestinationContext from '../context/DestinationContext';\nimport { useContext } from 'react';\nimport LoadingContext from '../context/LoadingContext';\nimport Loading from '../components/Loading';\n\nconst Planets = () => {\n    const navigate = useNavigate();\n    const [planets, setPlanets] = useState('');\n    // const {targetPlanet} = useContext(DestinationContext);\n    // const [, updateState] = React.useState();\n    // const forceUpdate = React.useCallback(() => updateState({}), []);\n    const [resetCount, setResetCount] = useState(0);\n    const {toggleLoading, isLoading} = useContext(LoadingContext);\n    const [dataLoaded, setDataLoaded] = useState(false);\n\n    useEffect(() => {\n        const loadPlanets = async () => {\n            toggleLoading();\n            const loadingAPI = await SpaceTravelApi.getPlanets();\n            console.log(loadingAPI, 'loadingAPI')\n            setPlanets(loadingAPI.data);\n            setDataLoaded(true);\n        }\n\n        loadPlanets(); \n    }, [])\n\n    const loadPlanetsFromEffect = () => {\n        if(planets !== ''){\n            return (\n              planets.map((p) => {\n                return (\n                  <Planet \n                    id={p.id} \n                    key={p.id}\n                    pictureUrl={p.pictureUrl} \n                    name={p.name} \n                    currentPopulation={p.currentPopulation}\n                  />\n                )\n              })\n            )\n          }\n    }\n\n    useEffect(() => {\n      if(dataLoaded === true){\n        toggleLoading();\n      }\n  }, [dataLoaded])\n\n    const showLoadingSign = () => {\n      console.log(isLoading, 'isLoading')\n      if(isLoading === true){\n        return (\n            <Loading />\n        )\n      }\n  }\n\n    // useEffect(() => {\n    //   if(targetPlanet !== null){\n    //     forceUpdate();\n    //   }\n    // }, [forceUpdate, targetPlanet])\n\n    const incrementResetCount = () => {\n      setResetCount(count => count + 1);\n    }\n\n    useEffect(() => {\n      if(resetCount > 0){\n      const loadPlanets = () => {\n        localStorage.setItem(\"MOCK_DB\", JSON.stringify({\n          planets: [\n            {\n              id: 0,\n              name: \"Mercury\",\n              currentPopulation: 0,\n              pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/8/88/Reprocessed_Mariner_10_image_of_Mercury.jpg\"\n      \n            },\n            {\n              id: 1,\n              name: \"Venus\",\n              currentPopulation: 0,\n              pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Venus_globe.jpg/800px-Venus_globe.jpg\"\n      \n            },\n            {\n              id: 2,\n              name: \"Earth\",\n              currentPopulation: 100000,\n              pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/The_Blue_Marble_%28remastered%29.jpg/800px-The_Blue_Marble_%28remastered%29.jpg\"\n      \n            },\n            {\n              id: 3,\n              name: \"Mars\",\n              currentPopulation: 0,\n              pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/02/OSIRIS_Mars_true_color.jpg/800px-OSIRIS_Mars_true_color.jpg\"\n            },\n            {\n              id: 4,\n              name: \"Jupiter\",\n              currentPopulation: 0,\n              pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Jupiter%2C_image_taken_by_NASA%27s_Hubble_Space_Telescope%2C_June_2019.png/800px-Jupiter%2C_image_taken_by_NASA%27s_Hubble_Space_Telescope%2C_June_2019.png\"\n      \n            },\n            {\n              id: 5,\n              name: \"Saturn\",\n              currentPopulation: 0,\n              pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/8423_20181_1saturn2016.jpg/1920px-8423_20181_1saturn2016.jpg\"\n            },\n            {\n              id: 6,\n              name: \"Uranus\",\n              currentPopulation: 0,\n              pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Uranus_as_seen_by_NASA%27s_Voyager_2_%28remastered%29_-_JPEG_converted.jpg/800px-Uranus_as_seen_by_NASA%27s_Voyager_2_%28remastered%29_-_JPEG_converted.jpg\"\n            },\n            {\n              id: 7,\n              name: \"Neptune\",\n              currentPopulation: 0,\n              pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/0/06/Neptune.jpg\"\n            }\n          ],\n          spacecrafts: [\n            {\n              id: \"prispax\",\n              name: \"Prispax\",\n              capacity: 10000,\n              description: \"Presenting the Astrolux Odyssey: a revolutionary spacecraft merging cutting-edge technology with lavish luxury, designed to usher 10,000 passengers into the solar system's embrace. A marvel of engineering, its sleek exterior is adorned with solar panels, fueling advanced propulsion while minimizing environmental impact.\" +\n                           \"Within, the vessel transforms into a haven of opulence. Lavish suites offer cosmic panoramas, celestial artwork bedecks lounges, and sprawling gardens thrive in zero-gravity. Culinary excellence reigns in gourmet restaurants, while immersive theaters and VR chambers offer stellar entertainment.\" +\n                           \"Safety remains paramount with cosmic radiation shielding and top-tier medical facilities. The Astrolux Odyssey not only advances space exploration but redefines elegance, uniting humanity's thirst for knowledge with a taste of the sublime.\",\n              pictureUrl: null,\n              currentLocation: 2\n            }\n          ]\n        }))\n      }\n\n      loadPlanets();\n    }\n    }, [resetCount])\n\n    return (\n        <div>\n          {showLoadingSign()}\n           <button onClick={() => navigate(-1)}>Back</button>\n           <button onClick={() => incrementResetCount()}>Reset</button>\n           {loadPlanetsFromEffect()}\n        </div>\n    )\n}\n\nexport default Planets;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}