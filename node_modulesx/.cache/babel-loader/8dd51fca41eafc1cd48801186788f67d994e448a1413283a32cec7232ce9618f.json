{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/pages/Planets.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SpaceTravelApi from '../services/SpaceTravelApi';\nimport Planet from '../components/ Planet';\nimport DestinationContext from '../context/DestinationContext';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const [planets, setPlanets] = useState('');\n  const forceUpdate = useForceUpdate();\n  const {\n    targetPlanet,\n    targetSpacecraft,\n    setTargetPlanet,\n    setTargetSpacecraft,\n    updateComponents\n  } = useContext(DestinationContext);\n  function useForceUpdate() {\n    _s();\n    const [state, setState] = useState(0);\n    return () => setState(state => state + 1);\n  }\n  _s(useForceUpdate, \"dSBJZmkDt6dWLATuv9YPGwgkF9A=\");\n  useEffect(() => {\n    const loadPlanets = async () => {\n      const loadingAPI = await SpaceTravelApi.getPlanets();\n      setPlanets(loadingAPI.data);\n    };\n    loadPlanets();\n  }, []);\n  const loadPlanetsFromEffect = () => {\n    if (planets !== '') {\n      return planets.map(p => {\n        return /*#__PURE__*/_jsxDEV(Planet, {\n          id: p.id,\n          pictureUrl: p.pictureUrl,\n          name: p.name,\n          currentPopulation: p.currentPopulation\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this);\n      });\n    }\n  };\n  useEffect(() => {\n    if (targetPlanet !== null) {\n      forceUpdate();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => forceUpdate(),\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this), loadPlanetsFromEffect()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s2(Planets, \"p6F04Fn8ZZmz6YkYkowXjXJtiFk=\", true, function () {\n  return [useNavigate];\n});\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","SpaceTravelApi","Planet","DestinationContext","useContext","jsxDEV","_jsxDEV","Planets","_s2","_s","$RefreshSig$","navigate","planets","setPlanets","forceUpdate","useForceUpdate","targetPlanet","targetSpacecraft","setTargetPlanet","setTargetSpacecraft","updateComponents","state","setState","loadPlanets","loadingAPI","getPlanets","data","loadPlanetsFromEffect","map","p","id","pictureUrl","name","currentPopulation","fileName","_jsxFileName","lineNumber","columnNumber","onClick","children","_c","$RefreshReg$"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/pages/Planets.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SpaceTravelApi from '../services/SpaceTravelApi';\nimport Planet from '../components/ Planet';\nimport DestinationContext from '../context/DestinationContext';\nimport { useContext } from 'react';\n\nconst Planets = () => {\n    const navigate = useNavigate();\n    const [planets, setPlanets] = useState('');\n    const forceUpdate = useForceUpdate();\n    const {targetPlanet, targetSpacecraft, setTargetPlanet, setTargetSpacecraft, updateComponents} = useContext(DestinationContext);\n\n    function useForceUpdate() {\n      const [state, setState] = useState(0);\n      return () => setState((state) => state + 1);\n    }\n\n    useEffect(() => {\n        const loadPlanets = async () => {\n            const loadingAPI = await SpaceTravelApi.getPlanets();\n            setPlanets(loadingAPI.data);\n\n        }\n\n\n        loadPlanets(); \n    }, [])\n\n    const loadPlanetsFromEffect = () => {\n        if(planets !== ''){\n            return (\n              planets.map((p) => {\n                return (\n                  <Planet \n                    id={p.id} \n                    key={p.id}\n                    pictureUrl={p.pictureUrl} \n                    name={p.name} \n                    currentPopulation={p.currentPopulation}\n                  />\n                )\n              })\n            )\n          }\n    }\n\n    useEffect(() => {\n      if(targetPlanet !== null){\n        forceUpdate();\n      }\n    }, [])\n\n    return (\n        <div onClick={() => forceUpdate()}>\n           <button onClick={() => navigate(-1)}>Back</button>\n           {loadPlanetsFromEffect()}\n        </div>\n    )\n}\n\nexport default Planets;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAClB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMe,WAAW,GAAGC,cAAc,CAAC,CAAC;EACpC,MAAM;IAACC,YAAY;IAAEC,gBAAgB;IAAEC,eAAe;IAAEC,mBAAmB;IAAEC;EAAgB,CAAC,GAAGhB,UAAU,CAACD,kBAAkB,CAAC;EAE/H,SAASY,cAAcA,CAAA,EAAG;IAAAN,EAAA;IACxB,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;IACrC,OAAO,MAAMuB,QAAQ,CAAED,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC;EAC7C;EAACZ,EAAA,CAHQM,cAAc;EAKvBjB,SAAS,CAAC,MAAM;IACZ,MAAMyB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,UAAU,GAAG,MAAMvB,cAAc,CAACwB,UAAU,CAAC,CAAC;MACpDZ,UAAU,CAACW,UAAU,CAACE,IAAI,CAAC;IAE/B,CAAC;IAGDH,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,qBAAqB,GAAGA,CAAA,KAAM;IAChC,IAAGf,OAAO,KAAK,EAAE,EAAC;MACd,OACEA,OAAO,CAACgB,GAAG,CAAEC,CAAC,IAAK;QACjB,oBACEvB,OAAA,CAACJ,MAAM;UACL4B,EAAE,EAAED,CAAC,CAACC,EAAG;UAETC,UAAU,EAAEF,CAAC,CAACE,UAAW;UACzBC,IAAI,EAAEH,CAAC,CAACG,IAAK;UACbC,iBAAiB,EAAEJ,CAAC,CAACI;QAAkB,GAHlCJ,CAAC,CAACC,EAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CAAC;MAEN,CAAC,CAAC;IAEN;EACN,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACd,IAAGkB,YAAY,KAAK,IAAI,EAAC;MACvBF,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA;IAAKgC,OAAO,EAAEA,CAAA,KAAMxB,WAAW,CAAC,CAAE;IAAAyB,QAAA,gBAC/BjC,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAM3B,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAA4B,QAAA,EAAC;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDV,qBAAqB,CAAC,CAAC;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd,CAAC;AAAA7B,GAAA,CApDKD,OAAO;EAAA,QACQP,WAAW;AAAA;AAAAwC,EAAA,GAD1BjC,OAAO;AAsDb,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}