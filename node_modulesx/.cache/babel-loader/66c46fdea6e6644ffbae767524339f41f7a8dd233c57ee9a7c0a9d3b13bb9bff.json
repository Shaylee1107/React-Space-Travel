{"ast":null,"code":"import{nanoid}from\"nanoid\";class SpaceTravelMockApi{static prepareResponse(){return{isError:false,data:null};}static wait(){let duration=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1000;return new Promise(resolve=>setTimeout(resolve,duration));}static getMockDb(){let mockDb=localStorage.getItem(SpaceTravelMockApi.MOCK_DB_KEY);if(!mockDb){localStorage.setItem(SpaceTravelMockApi.MOCK_DB_KEY,JSON.stringify(SpaceTravelMockApi.MOCK_DB));mockDb=SpaceTravelMockApi.MOCK_DB;}else{mockDb=JSON.parse(mockDb);}return mockDb;}static setMockDb(mockDb){localStorage.setItem(SpaceTravelMockApi.MOCK_DB_KEY,JSON.stringify(mockDb));}static async getPlanets(){await SpaceTravelMockApi.wait();const response=SpaceTravelMockApi.prepareResponse();try{const mockDb=SpaceTravelMockApi.getMockDb();response.data=mockDb.planets;}catch(error){response.isError=true;response.data=error;}return response;}static async getSpacecrafts(){await SpaceTravelMockApi.wait();const response=SpaceTravelMockApi.prepareResponse();try{const mockDb=SpaceTravelMockApi.getMockDb();response.data=mockDb.spacecrafts;}catch(error){response.isError=true;response.data=error;}return response;}static async getSpacecraftById(_ref){let{id}=_ref;await SpaceTravelMockApi.wait();const response=SpaceTravelMockApi.prepareResponse();try{const mockDb=SpaceTravelMockApi.getMockDb();for(let i=0;i<mockDb.spacecrafts.length;i++){const spacecraft=mockDb.spacecrafts[i];if(spacecraft.id===id){response.data=spacecraft;break;}}}catch(error){response.isError=true;response.data=error;}return response;}static async buildSpacecraft(_ref2){let{name,capacity,description,pictureUrl=undefined}=_ref2;await SpaceTravelMockApi.wait();const response=SpaceTravelMockApi.prepareResponse();try{const spacecraft={id:nanoid(),name,capacity,description,pictureUrl,currentLocation:2};const mockDb=SpaceTravelMockApi.getMockDb();mockDb.spacecrafts.push(spacecraft);SpaceTravelMockApi.setMockDb(mockDb);}catch(error){response.isError=true;response.data=error;}return response;}static async destroySpacecraftById(_ref3){let{id}=_ref3;await SpaceTravelMockApi.wait();const response=SpaceTravelMockApi.prepareResponse();try{const mockDb=SpaceTravelMockApi.getMockDb();for(let i=0;i<mockDb.spacecrafts.length;i++){const spacecraft=mockDb.spacecrafts[i];if(spacecraft.id===id){mockDb.spacecrafts.splice(i,1);SpaceTravelMockApi.setMockDb(mockDb);}}}catch(error){response.isError=true;response.data=error;}return response;}static async sendSpacecraftToPlanet(_ref4){let{spacecraftId,targetPlanetId}=_ref4;await SpaceTravelMockApi.wait();const response=SpaceTravelMockApi.prepareResponse();try{const mockDb=SpaceTravelMockApi.getMockDb();for(let i=0;i<mockDb.spacecrafts.length;i++){const spacecraft=mockDb.spacecrafts[i];if(spacecraft.id===spacecraftId){if(spacecraft.currentLocation===targetPlanetId){throw new Error(\"The spacecraft is already on this planet!\");}let transferredCapacity=spacecraft.capacity;for(const planet of mockDb.planets){if(planet.id===spacecraft.currentLocation){if(planet.currentPopulation<transferredCapacity){transferredCapacity=planet.currentPopulation;}planet.currentPopulation-=transferredCapacity;}}for(const planet of mockDb.planets){if(planet.id===targetPlanetId){planet.currentPopulation+=transferredCapacity;}}spacecraft.currentLocation=targetPlanetId;SpaceTravelMockApi.setMockDb(mockDb);}}}catch(error){response.isError=true;response.data=error;}return response;}}SpaceTravelMockApi.MOCK_DB={planets:[{id:0,name:\"Mercury\",currentPopulation:0,pictureUrl:\"https://upload.wikimedia.org/wikipedia/commons/8/88/Reprocessed_Mariner_10_image_of_Mercury.jpg\"},{id:1,name:\"Venus\",currentPopulation:0,pictureUrl:\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Venus_globe.jpg/800px-Venus_globe.jpg\"},{id:2,name:\"Earth\",currentPopulation:100000,pictureUrl:\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/The_Blue_Marble_%28remastered%29.jpg/800px-The_Blue_Marble_%28remastered%29.jpg\"},{id:3,name:\"Mars\",currentPopulation:0,pictureUrl:\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/02/OSIRIS_Mars_true_color.jpg/800px-OSIRIS_Mars_true_color.jpg\"},{id:4,name:\"Jupiter\",currentPopulation:0,pictureUrl:\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Jupiter%2C_image_taken_by_NASA%27s_Hubble_Space_Telescope%2C_June_2019.png/800px-Jupiter%2C_image_taken_by_NASA%27s_Hubble_Space_Telescope%2C_June_2019.png\"},{id:5,name:\"Saturn\",currentPopulation:0,pictureUrl:\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/8423_20181_1saturn2016.jpg/1920px-8423_20181_1saturn2016.jpg\"},{id:6,name:\"Uranus\",currentPopulation:0,pictureUrl:\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Uranus_as_seen_by_NASA%27s_Voyager_2_%28remastered%29_-_JPEG_converted.jpg/800px-Uranus_as_seen_by_NASA%27s_Voyager_2_%28remastered%29_-_JPEG_converted.jpg\"},{id:7,name:\"Neptune\",currentPopulation:0,pictureUrl:\"https://upload.wikimedia.org/wikipedia/commons/0/06/Neptune.jpg\"}],spacecrafts:[{id:\"prispax\",name:\"Prispax\",capacity:10000,description:\"Presenting the Astrolux Odyssey: a revolutionary spacecraft merging cutting-edge technology with lavish luxury, designed to usher 10,000 passengers into the solar system's embrace. A marvel of engineering, its sleek exterior is adorned with solar panels, fueling advanced propulsion while minimizing environmental impact.\"+\"Within, the vessel transforms into a haven of opulence. Lavish suites offer cosmic panoramas, celestial artwork bedecks lounges, and sprawling gardens thrive in zero-gravity. Culinary excellence reigns in gourmet restaurants, while immersive theaters and VR chambers offer stellar entertainment.\"+\"Safety remains paramount with cosmic radiation shielding and top-tier medical facilities. The Astrolux Odyssey not only advances space exploration but redefines elegance, uniting humanity's thirst for knowledge with a taste of the sublime.\",pictureUrl:null,currentLocation:2}]};SpaceTravelMockApi.MOCK_DB_KEY=\"MOCK_DB\";export default SpaceTravelMockApi;","map":{"version":3,"names":["nanoid","SpaceTravelMockApi","prepareResponse","isError","data","wait","duration","arguments","length","undefined","Promise","resolve","setTimeout","getMockDb","mockDb","localStorage","getItem","MOCK_DB_KEY","setItem","JSON","stringify","MOCK_DB","parse","setMockDb","getPlanets","response","planets","error","getSpacecrafts","spacecrafts","getSpacecraftById","_ref","id","i","spacecraft","buildSpacecraft","_ref2","name","capacity","description","pictureUrl","currentLocation","push","destroySpacecraftById","_ref3","splice","sendSpacecraftToPlanet","_ref4","spacecraftId","targetPlanetId","Error","transferredCapacity","planet","currentPopulation"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/services/SpaceTravelMockApi.js"],"sourcesContent":["import {nanoid} from \"nanoid\";\n\nclass SpaceTravelMockApi\n{\n  static MOCK_DB = {\n    planets: [\n      {\n        id: 0,\n        name: \"Mercury\",\n        currentPopulation: 0,\n        pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/8/88/Reprocessed_Mariner_10_image_of_Mercury.jpg\"\n\n      },\n      {\n        id: 1,\n        name: \"Venus\",\n        currentPopulation: 0,\n        pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Venus_globe.jpg/800px-Venus_globe.jpg\"\n\n      },\n      {\n        id: 2,\n        name: \"Earth\",\n        currentPopulation: 100000,\n        pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/The_Blue_Marble_%28remastered%29.jpg/800px-The_Blue_Marble_%28remastered%29.jpg\"\n\n      },\n      {\n        id: 3,\n        name: \"Mars\",\n        currentPopulation: 0,\n        pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/02/OSIRIS_Mars_true_color.jpg/800px-OSIRIS_Mars_true_color.jpg\"\n      },\n      {\n        id: 4,\n        name: \"Jupiter\",\n        currentPopulation: 0,\n        pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Jupiter%2C_image_taken_by_NASA%27s_Hubble_Space_Telescope%2C_June_2019.png/800px-Jupiter%2C_image_taken_by_NASA%27s_Hubble_Space_Telescope%2C_June_2019.png\"\n\n      },\n      {\n        id: 5,\n        name: \"Saturn\",\n        currentPopulation: 0,\n        pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/8423_20181_1saturn2016.jpg/1920px-8423_20181_1saturn2016.jpg\"\n      },\n      {\n        id: 6,\n        name: \"Uranus\",\n        currentPopulation: 0,\n        pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Uranus_as_seen_by_NASA%27s_Voyager_2_%28remastered%29_-_JPEG_converted.jpg/800px-Uranus_as_seen_by_NASA%27s_Voyager_2_%28remastered%29_-_JPEG_converted.jpg\"\n      },\n      {\n        id: 7,\n        name: \"Neptune\",\n        currentPopulation: 0,\n        pictureUrl: \"https://upload.wikimedia.org/wikipedia/commons/0/06/Neptune.jpg\"\n      }\n    ],\n    spacecrafts: [\n      {\n        id: \"prispax\",\n        name: \"Prispax\",\n        capacity: 10000,\n        description: \"Presenting the Astrolux Odyssey: a revolutionary spacecraft merging cutting-edge technology with lavish luxury, designed to usher 10,000 passengers into the solar system's embrace. A marvel of engineering, its sleek exterior is adorned with solar panels, fueling advanced propulsion while minimizing environmental impact.\" +\n                     \"Within, the vessel transforms into a haven of opulence. Lavish suites offer cosmic panoramas, celestial artwork bedecks lounges, and sprawling gardens thrive in zero-gravity. Culinary excellence reigns in gourmet restaurants, while immersive theaters and VR chambers offer stellar entertainment.\" +\n                     \"Safety remains paramount with cosmic radiation shielding and top-tier medical facilities. The Astrolux Odyssey not only advances space exploration but redefines elegance, uniting humanity's thirst for knowledge with a taste of the sublime.\",\n        pictureUrl: null,\n        currentLocation: 2\n      }\n    ]\n  };\n  static MOCK_DB_KEY = \"MOCK_DB\";\n\n  static prepareResponse ()\n  {\n    return {\n      isError: false,\n      data: null\n    };\n  }\n\n  static wait (duration = 1000)\n  {\n    return new Promise(resolve => setTimeout(resolve, duration));\n  }\n\n  static getMockDb ()\n  {\n    let mockDb = localStorage.getItem(SpaceTravelMockApi.MOCK_DB_KEY);\n\n    if (!mockDb)\n    {\n      localStorage.setItem(SpaceTravelMockApi.MOCK_DB_KEY, JSON.stringify(SpaceTravelMockApi.MOCK_DB));\n      mockDb = SpaceTravelMockApi.MOCK_DB;\n    }\n    else\n    {\n      mockDb = JSON.parse(mockDb);\n    }\n\n    return mockDb;\n  }\n\n  static setMockDb (mockDb)\n  {\n    localStorage.setItem(SpaceTravelMockApi.MOCK_DB_KEY, JSON.stringify(mockDb));\n  }\n\n  static async getPlanets ()\n  {\n    await SpaceTravelMockApi.wait();\n\n    const response = SpaceTravelMockApi.prepareResponse();\n\n    try\n    {\n      const mockDb = SpaceTravelMockApi.getMockDb();\n      response.data = mockDb.planets;\n    }\n    catch (error)\n    {\n      response.isError = true;\n      response.data = error;\n    }\n\n    return response;\n  }\n\n  static async getSpacecrafts ()\n  {\n    await SpaceTravelMockApi.wait();\n\n    const response = SpaceTravelMockApi.prepareResponse();\n\n    try\n    {\n      const mockDb = SpaceTravelMockApi.getMockDb();\n      response.data = mockDb.spacecrafts;\n    }\n    catch (error)\n    {\n      response.isError = true;\n      response.data = error;\n    }\n  \n\n    return response;\n  }\n\n  static async getSpacecraftById ({id})\n  {\n    await SpaceTravelMockApi.wait();\n\n    const response = SpaceTravelMockApi.prepareResponse();\n\n    try\n    {\n      const mockDb = SpaceTravelMockApi.getMockDb();\n\n      for (let i = 0; i < mockDb.spacecrafts.length; i++)\n      {\n        const spacecraft = mockDb.spacecrafts[i];\n\n        if (spacecraft.id === id)\n        {\n          response.data = spacecraft;\n          break;\n        }\n      }\n    }\n    catch (error)\n    {\n      response.isError = true;\n      response.data = error;\n    }\n\n    return response;\n  }\n\n  static async buildSpacecraft ({name, capacity, description, pictureUrl = undefined})\n  {\n    await SpaceTravelMockApi.wait();\n\n    const response = SpaceTravelMockApi.prepareResponse();\n\n    try\n    {\n      const spacecraft = {id: nanoid(), name, capacity, description, pictureUrl, currentLocation: 2};\n\n      const mockDb = SpaceTravelMockApi.getMockDb();\n      mockDb.spacecrafts.push(spacecraft);\n      SpaceTravelMockApi.setMockDb(mockDb);\n    }\n    catch (error)\n    {\n      response.isError = true;\n      response.data = error;\n    }\n\n    return response;\n  }\n\n  static async destroySpacecraftById ({id})\n  {\n    await SpaceTravelMockApi.wait();\n\n    const response = SpaceTravelMockApi.prepareResponse();\n\n    try\n    {\n      const mockDb = SpaceTravelMockApi.getMockDb();\n\n      for (let i = 0; i < mockDb.spacecrafts.length; i++)\n      {\n        const spacecraft = mockDb.spacecrafts[i];\n        if (spacecraft.id === id)\n        {\n          mockDb.spacecrafts.splice(i, 1);\n          SpaceTravelMockApi.setMockDb(mockDb);\n        }\n      }\n    }\n    catch (error)\n    {\n      response.isError = true;\n      response.data = error;\n    }\n  \n    return response;\n  }\n\n  static async sendSpacecraftToPlanet ({spacecraftId, targetPlanetId})\n  {\n    await SpaceTravelMockApi.wait();\n\n    const response = SpaceTravelMockApi.prepareResponse();\n\n    try\n    {\n      const mockDb = SpaceTravelMockApi.getMockDb();\n\n      for (let i = 0; i < mockDb.spacecrafts.length; i++)\n      {\n        const spacecraft = mockDb.spacecrafts[i];\n\n        if (spacecraft.id === spacecraftId)\n        {\n          if (spacecraft.currentLocation === targetPlanetId)\n          {\n            throw new Error(\"The spacecraft is already on this planet!\");\n          }\n\n          let transferredCapacity = spacecraft.capacity;\n\n          for (const planet of mockDb.planets)\n          {\n            if (planet.id === spacecraft.currentLocation)\n            {\n              if (planet.currentPopulation < transferredCapacity)\n              {\n                transferredCapacity = planet.currentPopulation;\n              }\n\n              planet.currentPopulation -= transferredCapacity;\n            }\n          }\n\n          for (const planet of mockDb.planets)\n          {\n            if (planet.id === targetPlanetId)\n            {\n              planet.currentPopulation += transferredCapacity;\n            }\n          }\n\n          spacecraft.currentLocation = targetPlanetId;\n          SpaceTravelMockApi.setMockDb(mockDb);\n        }\n      }\n    }\n    catch (error)\n    {\n      response.isError = true;\n      response.data = error;\n    }\n\n    return response;\n  }\n}\n\nexport default SpaceTravelMockApi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}