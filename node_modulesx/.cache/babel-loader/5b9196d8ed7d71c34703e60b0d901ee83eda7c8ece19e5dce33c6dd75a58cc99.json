{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/providers/DestinationProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport DestinationContext from '../context/DestinationContext';\nimport SpaceTravelApi from '../services/SpaceTravelApi';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DestinationProvider = ({\n  children\n}) => {\n  _s();\n  const [targetPlanet, setTargetPlanet] = useState(null);\n  const [targetSpacecraft, setTargetSpacecraft] = useState(null);\n  const [reRender, setReRender] = useState(false);\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const reRenderComponent = () => {\n    setReRender(render => !render);\n  };\n\n  // function useForceUpdate(){\n  //     console.log(\"RUNNING\")\n  //     const [value, setValue] = useState(0); \n  //     return () => setValue(value => value + 1); \n  // }\n  // const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    const sendShipToPlanet = async () => {\n      if (targetSpacecraft !== null && targetPlanet !== null) {\n        SpaceTravelApi.sendSpacecraftToPlanet({\n          'spacecraftId': targetSpacecraft,\n          'targetPlanetId': targetPlanet\n        });\n        setTargetPlanet(null);\n        setTargetSpacecraft(null);\n      }\n    };\n    sendShipToPlanet();\n  }, [targetPlanet, targetSpacecraft]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DestinationContext.Provider, {\n      value: {\n        targetPlanet,\n        targetSpacecraft,\n        setTargetPlanet,\n        setTargetSpacecraft,\n        reRenderComponent,\n        reRender,\n        forceUpdate\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(DestinationProvider, \"GverIPDh0VvyYMz74YMHp3W6o68=\");\n_c = DestinationProvider;\nexport default DestinationProvider;\nvar _c;\n$RefreshReg$(_c, \"DestinationProvider\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DestinationContext","SpaceTravelApi","useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","DestinationProvider","children","_s","targetPlanet","setTargetPlanet","targetSpacecraft","setTargetSpacecraft","reRender","setReRender","forceUpdate","x","reRenderComponent","render","sendShipToPlanet","sendSpacecraftToPlanet","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/providers/DestinationProvider.js"],"sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\nimport DestinationContext from '../context/DestinationContext';\nimport SpaceTravelApi from '../services/SpaceTravelApi';\nimport { useReducer } from 'react';\n\nconst DestinationProvider = ({ children }) => {\n    const [targetPlanet, setTargetPlanet] = useState(null);\n    const [targetSpacecraft, setTargetSpacecraft] = useState(null);\n    const [reRender, setReRender] = useState(false);\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n    const reRenderComponent = () => {\n        setReRender(render => !render);\n    }\n\n    // function useForceUpdate(){\n    //     console.log(\"RUNNING\")\n    //     const [value, setValue] = useState(0); \n    //     return () => setValue(value => value + 1); \n    // }\n    // const forceUpdate = useForceUpdate();\n\n    useEffect(() => {\n        const sendShipToPlanet = async () => {\n            if(targetSpacecraft !== null && targetPlanet !== null){\n                SpaceTravelApi.sendSpacecraftToPlanet({'spacecraftId': targetSpacecraft, 'targetPlanetId': targetPlanet})\n                 setTargetPlanet(null);\n                 setTargetSpacecraft(null);\n            }\n        }\n\n        sendShipToPlanet();\n    }, [targetPlanet, targetSpacecraft])\n\n    return (\n        <>\n            <DestinationContext.Provider value={{targetPlanet, targetSpacecraft, setTargetPlanet, setTargetSpacecraft, reRenderComponent, reRender, forceUpdate}}>\n                {children}\n            </DestinationContext.Provider>\n        </>\n    )\n}\n\nexport default DestinationProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAC7D,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,OAAOC,cAAc,MAAM,4BAA4B;AACvD,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,GAAGkB,WAAW,CAAC,GAAGd,UAAU,CAACe,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EAEjD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BH,WAAW,CAACI,MAAM,IAAI,CAACA,MAAM,CAAC;EAClC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEAtB,SAAS,CAAC,MAAM;IACZ,MAAMuB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAGR,gBAAgB,KAAK,IAAI,IAAIF,YAAY,KAAK,IAAI,EAAC;QAClDT,cAAc,CAACoB,sBAAsB,CAAC;UAAC,cAAc,EAAET,gBAAgB;UAAE,gBAAgB,EAAEF;QAAY,CAAC,CAAC;QACxGC,eAAe,CAAC,IAAI,CAAC;QACrBE,mBAAmB,CAAC,IAAI,CAAC;MAC9B;IACJ,CAAC;IAEDO,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACV,YAAY,EAAEE,gBAAgB,CAAC,CAAC;EAEpC,oBACIR,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA,CAACJ,kBAAkB,CAACsB,QAAQ;MAACC,KAAK,EAAE;QAACb,YAAY;QAAEE,gBAAgB;QAAED,eAAe;QAAEE,mBAAmB;QAAEK,iBAAiB;QAAEJ,QAAQ;QAAEE;MAAW,CAAE;MAAAR,QAAA,EAChJA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACgB;EAAC,gBAChC,CAAC;AAEX,CAAC;AAAAlB,EAAA,CApCKF,mBAAmB;AAAAqB,EAAA,GAAnBrB,mBAAmB;AAsCzB,eAAeA,mBAAmB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}