{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/components/ Planet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SpaceTravelApi from '../services/SpaceTravelApi';\nimport FlyingSpaceship from './FlyingSpaceship';\nimport DestinationContext from '../context/DestinationContext';\nimport { useContext } from 'react';\nimport Loading from '../components/Loading';\nimport '../css/Planet.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Planet = ({\n  name,\n  pictureUrl,\n  currentPopulation,\n  id\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    setTargetPlanet,\n    setTargetSpacecraft,\n    isLoading\n  } = useContext(DestinationContext);\n  // const {isLoading, setIsLoading} = useContext(LoadingContext);\n\n  useEffect(() => {\n    const findLandedSpacecrafts = async () => {\n      const spacecrafts = await SpaceTravelApi.getSpacecrafts();\n      const spacecraftsData = spacecrafts.data;\n      setData(spacecraftsData);\n    };\n    findLandedSpacecrafts();\n  }, []);\n  const sendShipToPlanet = spacecraftId => {\n    setTargetSpacecraft(spacecraftId);\n  };\n  const addPlanetToDesination = () => {\n    setTargetPlanet(id);\n  };\n\n  // const showLoadingSign = () => {\n  //     console.log(isLoading, 'isLoading in planet')\n  //     if(isLoading === true){\n  //       return (\n  //           <Loading />\n  //       )\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showLoadingSign(), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => addPlanetToDesination(),\n          src: pictureUrl,\n          className: \"img\",\n          alt: \"planet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentPopulation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spaceship-container\",\n        children: data.filter(item => item.currentLocation === id).map(s => /*#__PURE__*/_jsxDEV(FlyingSpaceship, {\n          id: s.id,\n          pictureUrl: s.pictureUrl,\n          name: s.name,\n          capcity: s.capacity,\n          sendShipToPlanet: sendShipToPlanet\n        }, s.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Planet, \"dSUSKtCH82MRxmGK1p93vuzGg4c=\");\n_c = Planet;\nexport default Planet;\nvar _c;\n$RefreshReg$(_c, \"Planet\");","map":{"version":3,"names":["React","useState","useEffect","SpaceTravelApi","FlyingSpaceship","DestinationContext","useContext","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","Planet","name","pictureUrl","currentPopulation","id","_s","data","setData","setTargetPlanet","setTargetSpacecraft","isLoading","findLandedSpacecrafts","spacecrafts","getSpacecrafts","spacecraftsData","sendShipToPlanet","spacecraftId","addPlanetToDesination","children","showLoadingSign","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","currentLocation","map","s","capcity","capacity","_c","$RefreshReg$"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/space-travel/src/components/ Planet.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SpaceTravelApi from '../services/SpaceTravelApi';\nimport FlyingSpaceship from './FlyingSpaceship';\nimport DestinationContext from '../context/DestinationContext';\nimport { useContext } from 'react';\nimport Loading from '../components/Loading';\nimport '../css/Planet.css';\n\nconst Planet = ({ name, pictureUrl, currentPopulation, id}) => {\n    const [data, setData] = useState([]);\n    const {setTargetPlanet, setTargetSpacecraft, isLoading} = useContext(DestinationContext);\n    // const {isLoading, setIsLoading} = useContext(LoadingContext);\n\n    useEffect(() => {\n        const findLandedSpacecrafts = async () => {\n           const spacecrafts = await SpaceTravelApi.getSpacecrafts();\n           const spacecraftsData = spacecrafts.data; \n           setData(spacecraftsData);\n        }\n\n        findLandedSpacecrafts();\n    }, [])\n\n    const sendShipToPlanet = (spacecraftId) => {\n      setTargetSpacecraft(spacecraftId);\n    }\n\n    const addPlanetToDesination = () => {\n        setTargetPlanet(id);\n    }\n\n    // const showLoadingSign = () => {\n    //     console.log(isLoading, 'isLoading in planet')\n    //     if(isLoading === true){\n    //       return (\n    //           <Loading />\n    //       )\n    //     }\n    // }\n\n    return (\n        <>\n            {showLoadingSign()};\n            <div className=\"container\">\n                <div className=\"img-container\" key={id}>\n                    <img  onClick={() => addPlanetToDesination()} src={pictureUrl} className=\"img\" alt=\"planet\"/>\n                    <p>{name}</p>\n                <p>{currentPopulation}</p>\n                </div>\n                <div className=\"spaceship-container\">\n                {\n                  data.filter((item) => item.currentLocation === id).map((s) => \n                    (\n                        <FlyingSpaceship \n                          id={s.id} \n                          pictureUrl={s.pictureUrl} \n                          key={s.id} \n                          name={s.name} \n                          capcity={s.capacity}\n                          sendShipToPlanet={sendShipToPlanet}\n                        />\n                    ))\n                }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Planet; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}